use std.os.stdin

# `use` basically does:
# stdin: std.os.stdin

# std.n_lines is an iterator that reads n new lines from stdin

# returns iterator to collect 10 lines from stdin
ten_lines: (stdin.n_lines 10)

# to associate numbers with each line, do:
ten_lines_with_numbers: (zip ten_lines integers)

# integers should be a range 1..

(ten_lines.each
  \line: (println line.length))

(ten_lines_with_numbers.each
  \line index: (printf "%d %s\n" index line))

# or to avoid lengthy names:
lines {
  ten_lines: (stdin.lines 10)
  (zip ten_lines 1..)
}

(lines.each
  \line index: (printf "%d %s\n" index line))

# this can be safely inlined at comptime to:

((zip (stdin.lines 10) 1..).each \line index: (printf "%d %s\n" index line))

# because of .each, iterator will ask for line from stdin then print it to stdout
# with a line number, doing so 10 times

# to first collect all 10 lines, then call the callback function on each of them, do:
(lines.all \line index: (printf "%d %s\n" index line))

